<?xml version="1.0"?>
<launch>

  <arg name="init_x" value="-10.0"/>
  <arg name="init_y" value="0.0"/>
  <arg name="init_z" value="0.1"/> 
  <!--arg name="mav_name" default="hummingbird"/-->
  <arg name="mav_name" default="hummingbird"/>
  <arg name="world_name" default="pd2"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="true"/>
  <!-- The following line causes gzmsg and gzerr messages to be printed to the console
      (even when Gazebo is started through roslaunch) -->
  <arg name="verbose" default="false"/>

  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>



  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world" />
    <!-- <arg name="debug" value="true"/> -->
    <arg name="paused" value="true"/>
    <!-- <arg name="gui" value="false"/> -->
    <!-- <arg name="verbose" value="true"/> -->
  </include>

  <group ns="$(arg mav_name)">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_with_vi_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
      <!-- <arg name="use_sim_time" value="$(arg use_sim_time)"/> -->
      <arg name="x" value="$(arg init_x)"/>
      <arg name="y" value="$(arg init_y)"/>
      <arg name="z" value="$(arg init_z)"/>
    </include>

    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>

    <node name="key_joystick" pkg="rotors_joy_interface" type="key_joystick.py" output="screen" />
    <node name="joy_node" pkg="joy" type="joy_node" />

    <node name="rotors_joy_interface" pkg="rotors_joy_interface" type="rotors_joy_interface" output="screen">
        <param name="velocity" type="double" value="0.5"/> 
        <param name="Num" type="int" value="10"/> 
        <param name="Radius" type="double" value="2"/> 
        <param name="dis_min" type="double" value="0.5"/> 

        <param name="autoflight" type="int" value="0"/> 
    </node>


    <node name="hovering_example" pkg="rotors_gazebo" type="hovering_example" output="screen">
      <param name="x" value="$(arg init_x)"/>
      <param name="y" value="$(arg init_y)"/>
      <param name="z" value="$(arg init_z)"/>
    </node>


  <!--launch rviz-->
    <node name="rviz" pkg="rviz" type="rviz" respawn="false" args="-d $(find rotors_gazebo)/launch/simulator.rviz"/>


    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> -->
  </group>
</launch>
